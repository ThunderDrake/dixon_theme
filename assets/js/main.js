// Generated by CoffeeScript 1.12.7
(function() {
  var App;

  App = (function() {
    function App() {
      this.phoneMask = ['+', '7', ' ', '(', /\d/, /\d/, /\d/, ')', ' ', /\d/, /\d/, /\d/, '-', /\d/, /\d/, '-', /\d/, /\d/];
      this.init();
    }

    App.prototype.init = function() {
      this.actions();
      return this["static"]();
    };

    App.prototype["static"] = function() {
      var A;
      A = this;
      if (typeof vanillaTextMask === 'object') {
        $('input[type="tel"], input[name="phone"]').each(function(ind, node) {
          return vanillaTextMask.maskInput({
            inputElement: node,
            mask: A.phoneMask
          });
        });
      }
      this.notifications();
      return this.initMobile();
    };

    App.prototype.initMobile = function() {
      var catalog_menu, mobile_menu, mobile_toggler, sidebar, sidebar_toggle;
      catalog_menu = $('.sidebar-holder .toggler');
      catalog_menu.on('click', function(event) {
        var li, sm;
        event.preventDefault();
        event.stopPropagation();
        li = $(this).closest('li');
        sm = li.find('> .sub-menu');
        if (li.hasClass('open')) {
          sm.css('display', 'block');
          sm.slideUp(200, function() {
            return sm.removeAttr('style');
          });
          return li.removeClass('open');
        } else {
          sm.css('display', 'none');
          sm.slideDown(200, function() {
            return sm.removeAttr('style');
          });
          return li.addClass('open');
        }
      });
      sidebar = $('.sidebar-holder');
      sidebar_toggle = $('.sidebar-toggle');
      sidebar_toggle.on('click', function() {
        return sidebar.toggleClass('open');
      });
      mobile_toggler = $('#header [data-action="toggle-menu"]');
      mobile_menu = $('#header .top-line .menu-holder');
      return mobile_toggler.on('click', function() {
        mobile_menu.toggleClass('open');
        return mobile_toggler.toggleClass('open');
      });
    };

    App.prototype.actions = function() {
      var A;
      A = this;
      return $(document).on('click', '[data-action="send"],[data-target="modal"]', function(e) {
        var callee, type;
        e.preventDefault();
        e.stopPropagation();
        callee = $(this);
        type = callee.data('action');
        return A.triggerAction(type, callee);
      });
    };

    App.prototype.triggerAction = function(type, callee) {
      switch (type) {
        case 'send':
          return this.sendForm(callee);
        default:
          return this.openModal(type, callee);
      }
    };

    App.prototype.notifications = function() {
      var A;
      A = this;
      $(document).on('added_to_cart', function() {
        return A.createNotification('Товар добавлен в корзину');
      });
      $(document).on('removed_from_cart', function() {
        return A.createNotification('Товар удален из корзину');
      });
      $(document).on('added_to_compare', function() {
        return A.createNotification('Товар добавлен в сравнение');
      });
      $(document).on('removed_from_compare', function() {
        return A.createNotification('Товар удален из сравнения');
      });
      return $(document).on('wc_update_cart', function() {
        return A.createNotification('Корзина обновлена');
      });
    };

    App.prototype.createNotification = function(content) {
      var notify;
      if (!this.notifications_block) {
        this.notifications_block = $('<div>', {
          "class": 'notifications'
        });
        $('#main').append(this.notifications_block);
      }
      notify = $('<div>', {
        "class": 'notification'
      }).html(content);
      return this.notifications_block.append(notify);
    };

    App.prototype.sppLink = function(text) {
      if (text == null) {
        text = '';
      }
      if (window.spp_link) {
        return '<a href="' + window.spp_link + '" target="_blank">' + text + '</a>';
      } else {
        return text;
      }
    };

    App.prototype.sendForm = function(callee) {
      var eform, fe, form;
      eform = callee.parents('.form');
      eform.find('.error').removeClass('error');
      form = eform.eserialize();
      if (form.status !== true) {
        fe = $(form.error);
        setTimeout(function() {
          return fe.addClass('error');
        }, 10);
        if (window.TOtriggers) {
          clearTimeout(window.TOtriggers['rcerror']);
        }
        return setTimeout(function() {
          return fe.removeClass('error');
        }, 5000, 'rcerror');
      } else {
        form.data['formsubmit'] = true;
        return $.ajax({
          url: '/wp-json/form-send/' + form.data['type'],
          processData: false,
          contentType: false,
          dataType: 'json',
          data: form.data,
          method: 'POST',
          success: function(response) {
            var config, modal;
            config = {
              title: 'Ваш запрос отправлен',
              content: '',
              buttons: [],
              timeout: 400,
              autoopen: true
            };
            modal = new Modal(config);
            return eform.find('input:not([type="hidden"]):not([type="checkbox"]):not([type="radio"]), textarea').val('');
          },
          error: function(response) {
            var config, modal;
            config = {
              title: 'Произошла ошибка',
              content: '',
              buttons: [],
              timeout: 400,
              autoopen: true
            };
            return modal = new Modal(config);
          }
        });
      }
    };

    App.prototype.openModal = function(type, callee) {
      var A, block, blocks, btn1, config, container, i, j, len, modal, product, spp, title;
      A = this;
      container = $('<div>', {
        "class": 'form'
      });
      blocks = [];
      blocks[1] = $('<div>', {
        "class": 'input'
      }).html('<input type="text" name="name" id="name" placeholder="Имя">');
      blocks[2] = $('<div>', {
        "class": 'input'
      }).html('<input type="tel" name="phone" id="phone" placeholder="Телефон*" required><div class="error-msg">Поле обязательно к заполнению</div>');
      title = 'Заказать звонок';
      switch (type) {
        case 'request':
          title = 'Оформить заявку';
          break;
        case 'order':
          title = 'Заказать';
          product = callee.data('product');
          if (product) {
            i = $('<input>', {
              'type': 'hidden',
              'name': 'product',
              'value': product
            });
            blocks.push(i);
          }
          break;
        case 'buy':
          title = 'Купить';
          product = callee.data('product');
          if (product) {
            i = $('<input>', {
              'type': 'hidden',
              'name': 'product',
              'value': product
            });
            blocks.push(i);
          }
      }
      spp = $('<div>', {
        "class": 'input spp-input'
      }).html('<input type="checkbox" id="spp" name="spp" required><label for="spp">Я согласен с ' + A.sppLink('условиями обработки персональных данных') + '</label><div class="error-msg">Мы не можем принять ваше обращение без данного согласия</div>');
      blocks.push(spp);
      for (j = 0, len = blocks.length; j < len; j++) {
        block = blocks[j];
        container.append(block);
      }
      btn1 = $('<button>', {
        type: 'submit',
        name: 'formsubmit',
        value: 'formsubmit'
      }).html('Отправить');
      config = {
        title: title,
        content: container,
        buttons: [btn1],
        timeout: 400,
        autoopen: true
      };
      modal = new Modal(config);
      $('input[type="tel"]', container).each(function(ind, node) {
        return vanillaTextMask.maskInput({
          inputElement: node,
          mask: A.phoneMask
        });
      });
      return btn1.on('click', function() {
        var f, fe, form;
        f = modal.modal_dialog.find('.form');
        f.find('.error').removeClass('error');
        form = f.eserialize();
        if (form.status !== true) {
          fe = $(form.error);
          setTimeout(function() {
            return fe.addClass('error');
          }, 10);
          if (window.TOtriggers) {
            clearTimeout(window.TOtriggers['rcerror']);
          }
          return setTimeout(function() {
            return fe.removeClass('error');
          }, 5000, 'rcerror');
        } else {
          if (!form.data['type']) {
            form.data['type'] = type;
          }
          return $.ajax({
            url: '/wp-json/form-send/' + form.data['type'],
            processData: false,
            contentType: false,
            dataType: 'json',
            data: form.data,
            method: 'POST',
            success: function(response) {
              if (response.status === 'success') {
                modal.modal_header_title.html('Ваш запрос отправлен');
                modal.modal_content.remove();
                return modal.modal_footer.remove();
              } else {
                return this.error(response);
              }
            },
            error: function(response) {
              var err_config, err_modal;
              err_config = {
                title: 'Произошла ошибка',
                content: '',
                buttons: [],
                timeout: 400,
                autoopen: true
              };
              return err_modal = new Modal(err_config);
            }
          });
        }
      });
    };

    return App;

  })();

  $('document').ready(function() {
    return window.App = new App();
  });

}).call(this);

// ЛОГИКА БЫСТРЫХ ССЫЛОК



$(document).ready(function() {
    

    $('.top__link').on('click', function(){
      $(this).removeClass('unactive').addClass('active')
            .siblings().removeClass('active').addClass('unactive');
    });

    $('.top__link .sub__link').on('click', function(){
      let tab = $(this).data('tab');
      console.log(tab);
      $('.sublinks__desc .sublink__item[data-name='+tab+']' ).show().siblings().hide();
    });
  });
//# sourceMappingURL=main.js.map
