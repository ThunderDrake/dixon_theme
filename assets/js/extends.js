// Generated by CoffeeScript 1.12.7
(function() {
  var origSetTimeout;

  $.fn.exists = function() {
    return this.length > 0;
  };

  $.fn.eserialize = function(selector) {
    var all, error_obj, formData, phone_mask;
    if (selector == null) {
      selector = '';
    }
    formData = new FormData();
    error_obj = [];
    all = true;
    phone_mask = /^\+7\s\(\d{3}\)\s\d{3}\-\d{2}\-\d{2}$/;
    if (selector === '') {
      selector = 'input, textarea, select, button[type="submit"]';
    }
    this.find(selector).each(function(index, input) {
      if (input.value !== '') {
        if (input.getAttribute('type') === 'tel') {
          if (!phone_mask.test(input.value)) {
            error_obj.push(input);
            all = false;
          } else {
            formData.append(input.name, input.value);
          }
        } else if (input.getAttribute('type') === 'file') {
          formData.append(input.name, input.files[0]);
        } else if (input.getAttribute('type') === 'checkbox') {
          if (input.checked === true) {
            formData.append(input.name, input.value);
          } else {
            if (input.getAttribute('required') !== null) {
              error_obj.push(input);
              all = false;
            }
          }
        } else if (input.getAttribute('type') === 'radio') {
          if (input.checked === true) {
            formData.append(input.name, input.value);
          }
        } else {
          formData.append(input.name, input.value);
        }
        return true;
      } else {
        if (input.getAttribute('required') !== null) {
          error_obj.push(input);
          all = false;
        }
        return true;
      }
    });
    return {
      status: all,
      data: formData,
      error: error_obj
    };
  };

  $.fn.scrollto = function() {
    var c, container, height, is_safari, obj, offset_to_top, qr, scroll_height, scrolled_to_top, selector, step, stop_h;
    obj = this.eq(0);
    selector = obj.data('anchor');
    is_safari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
    if (is_safari) {
      container = document.body;
    } else {
      container = document.documentElement;
    }
    scrolled_to_top = container.scrollTop;
    scroll_height = container.scrollHeight;
    offset_to_top = $('[data-scrolltarget="' + selector + '"]');
    if (offset_to_top.exists()) {
      offset_to_top = offset_to_top.get(0).getBoundingClientRect().top;
      height = scroll_height - window.innerHeight;
      if ((scrolled_to_top + offset_to_top) > height) {
        stop_h = height;
      } else {
        stop_h = scrolled_to_top + offset_to_top;
      }
      qr = scrolled_to_top;
      c = 0;
      step = function(time) {
        var r;
        if (offset_to_top < 0) {
          r = Math.max(container.scrollTop - 55, stop_h);
        } else {
          r = Math.min(container.scrollTop + 55, stop_h);
        }
        container.scrollTop = r;
        if (r !== stop_h && c < 5) {
          if (r === qr) {
            c++;
          } else {
            c = 0;
            qr = r;
          }
          return requestAnimationFrame(step);
        }
      };
      requestAnimationFrame(step);
    }
  };

  window.TOtriggers = [];

  origSetTimeout = window.setTimeout;

  window.setTimeout = function(callback, timeout, mark) {
    if (mark == null) {
      mark = null;
    }
    if (mark) {
      return window.TOtriggers[mark] = origSetTimeout(callback, timeout);
    } else {
      return origSetTimeout(callback, timeout);
    }
  };

}).call(this);

//# sourceMappingURL=extends.js.map
